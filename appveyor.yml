# Appveyor configuration for building Wheels.
# Appveyor configuration to build Wheels.
#
# Based on the Appveyor configuration example from
#
# https://packaging.python.org/guides/supporting-windows-using-appveyor/


environment:
  TWINE_USERNAME: mauve
  matrix:
    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python33"
    - PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python27-x64"
    - PYTHON: "C:\\Python33-x64"
      DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python34-x64"
      DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"

install:
  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install wheel"

build: off


# Not sure if we can realistically test on Appveyor; it needs
test_script: []
  #- "build.cmd %PYTHON%\\python.exe setup.py test"

after_test:
  - "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
          python -m pip install twine
          python -m twine upload (resolve-path dist\*.whl)
      }

artifacts:
  - path: dist\*
